[{"/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/index.js":"1","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/App.js":"2","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/reportWebVitals.js":"3","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/TopBar/TopBar.jsx":"4","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/assets/Constants.jsx":"5","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/HomeItem/HomeItem.js":"6","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/Sites/Sites.js":"7","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/Requisition/Requisition.jsx":"8","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/Units/Units.jsx":"9","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Home/Home.jsx":"10","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Login/Login.jsx":"11","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/PopUp/PopUp.jsx":"12","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/IsLoading/isLoading.jsx":"13","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/TnP/TnP.jsx":"14"},{"size":538,"mtime":1683484336521,"results":"15","hashOfConfig":"16"},{"size":421,"mtime":1683283791396,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1682619736177,"results":"18","hashOfConfig":"16"},{"size":845,"mtime":1685895527114,"results":"19","hashOfConfig":"16"},{"size":1705,"mtime":1695461896241,"results":"20","hashOfConfig":"16"},{"size":1031,"mtime":1694879079654,"results":"21","hashOfConfig":"16"},{"size":424,"mtime":1694893134804,"results":"22","hashOfConfig":"16"},{"size":216,"mtime":1685826698143,"results":"23","hashOfConfig":"16"},{"size":9502,"mtime":1695305430419,"results":"24","hashOfConfig":"16"},{"size":6464,"mtime":1695030379558,"results":"25","hashOfConfig":"16"},{"size":3730,"mtime":1695311096403,"results":"26","hashOfConfig":"16"},{"size":340,"mtime":1694985143968,"results":"27","hashOfConfig":"16"},{"size":347,"mtime":1695305196877,"results":"28","hashOfConfig":"16"},{"size":24579,"mtime":1695464224321,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1nw7va8",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/index.js",[],[],[],"/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/App.js",[],[],"/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/reportWebVitals.js",[],[],"/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/TopBar/TopBar.jsx",["80"],[],"import React from \"react\";\nimport './TopBar.css';\nimport logo from \"../assets/images/logo.png\"\nimport logoSvg from \"../assets/images/logo.svg\"\nimport { useNavigate } from \"react-router-dom\";\n\nconst TopBar = () => {\n\nvar navigate = useNavigate();\n\nconst logoutProcess = () => {\n\nnavigate(\"/\");\n}  \n\nconsole.log(logo);\n    return(\n        \n\n        <nav class=\"flex items-center justify-between flex-wrap bg-gray-500 p-1 topBar\" >\n  <div class=\"flex items-center flex-shrink-0 text-white mr-6\">\n   \n   <img src={logoSvg} height={35} width={55} alt=\"\" />\n   \n  </div>\n\n    <div>\n      <a onClick={logoutProcess} class=\"inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:text-teal-500 hover:bg-white mt-4 lg:mt-0 logoutBtn\">Logout</a>\n    </div>\n\n</nav>\n    );\n}\n\nexport default TopBar;","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/assets/Constants.jsx",[],[],"/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/HomeItem/HomeItem.js",["81","82","83","84"],[],"import React, { useEffect, useState } from \"react\";\nimport styles from './HomeItem.module.css'\n\nfunction HomeItem(props) {\n\nconst[sites,setSites] = useState(props.sites);   \nconst[inventory,setInventory] = useState([]);\nconst[requisitions,setRequisitions] = useState([]);\n\n\nconst getActiveSites = () => {\nconsole.log(\"sites length is \"+sites.length);\nif(sites.length===0)\nreturn 0;\n\nreturn -1;\n\n};\n\nconst getInventoryValue = () => {\n\n    if(inventory.length === 0)\n    return 0;\n\n    else return -1;\n};\n\nreturn(\n    <div >\n   <div className={styles.headerBox}>\n   <h1>Dashboard</h1>\n   </div>\n   <div className={styles.itemsBox}>\n    \n    <h2 className={styles.items}>No of Sites :  {sites.length}</h2>\n\n    <h2 className={styles.items}>Active Sites :  {getActiveSites()}</h2>\n\n    <h2 className={styles.items}>Total Inventory Value : Rs. {getInventoryValue()}</h2>\n    <h2 className={styles.items}>Total Active Requisitions :  {requisitions.length}</h2>\n\n\n    \n    </div> \n\n   \n    \n    </div>\n    \n)\n\n};\n\nexport default HomeItem;","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/Sites/Sites.js",["85","86","87","88"],[],"import React, { useEffect, useState } from \"react\";\nimport styles from  \"./Sites.module.css\";\nimport * as constants from \"../../assets/Constants\"\n\nfunction Sites(props) {\n\n  const[sites, setSites] = useState(props.sites);\n\n \n\nreturn(\n    <div >\n \n <div className={styles.headerBox}>\n   <h1>Site Management</h1>\n   </div>\n\n <div className={styles.allSitesBox}>\n    </div>   \n\n    \n\n    </div>\n   \n)\n\n};\n\nexport default Sites;","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/Requisition/Requisition.jsx",["89","90"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./Requisition.css\"\n\nfunction Requisition() {\n\nreturn(\n    <div id=\"mainBox\">\n        <h1>Requisition</h1>\n\n    </div>\n    )\n\n};\n\nexport default Requisition;","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/Units/Units.jsx",["91"],[],"import React, { useEffect, useState } from \"react\";\nimport myStyle from \"./Units.module.css\";\nimport * as constants from \"../../assets/Constants\";\nimport Loading from \"../IsLoading/isLoading\"\n\nfunction Units(props) {\n\nconst[units,setUnits] = useState([]);\nconst[categories,setCategories] = useState([]);\nconst[selectedUnit,setSelectedUnit] = useState(\"\");\nconst[newUnit,setNewUnit] = useState(\"\");\nconst[updateUnit,setUpdateUnit] = useState('');\nconst[isEditDisabledUnit,setIsEditDisabledUnit] = useState(true);\nconst[isEditDisabledCategory,setIsEditDisabledCategory] = useState(true);\nconst[selectedCategory,setSelectedCategory] = useState('');\nconst[updateCategory,setUpdateCategory] = useState('');\nconst[newCategory,setNewCategory] = useState('');\nconst[isLoading,setIsLoading] = useState(true);\n\nuseEffect(() => {\ngetUnits();\ngetCategories();\n},[]);\n\nconst handleCategoriesChange = (e) => {\n\n    setSelectedCategory(e.target.value);\n\n}\n\nconst handleUnitsChange = (e) => {\n\nsetSelectedUnit(e.target.value);\n}  \n\nconst editUnit = () => {\n  setUpdateUnit(selectedUnit);\n  setIsEditDisabledUnit(false);\n}\n\nconst getUnits = async() => {\n \n  try{ \n      setIsLoading(true);\n      console.log(constants.getUnits);\n        await fetch(constants.getUnits,{\n          method : \"Get\"\n        })\n               .then((response) => {\n                  return response.json();\n               })\n               .then((myJson) => {\n                    console.log(\"myjson is \"+myJson);\n                   setUnits(myJson);\n                   console.log(\"units is \"+units);\n                   setIsLoading(false);\n               });\n       } catch (e) {\n           console.log(e);\n       }\n};\n\nconst processAPI = async(url,methodName,type) =>{\n  \n  var responseValue = -1;\n  setIsLoading(true);\n  await fetch(url, {\n    method : methodName,\n       })\n  .then((response1) => {return response1.json()})\n  .then((response1)=> {\n    console.log(\"server response \"+response1);\n    responseValue = response1;\n  })\n  .then(()  => {\n    console.log(\"response is \"+responseValue);\n\n    setIsLoading(false);\n    \n   if(type===\"unit\")\n      {\n        getUnits();\n        handleResetUnit();\n\n        if(responseValue===1 && methodName===\"Post\")\n        {\n         alert(\"Unit created succesfully !\"); \n        }\n        else if(responseValue===1 && methodName===\"Delete\")\n        {\n         alert(\"Unit deleted succesfully !\"); \n        }\n        else if(responseValue===-1)\n        {\n          alert(\"Unit already exists !\");\n        }\n        else if(responseValue===5 && methodName===\"Delete\")\n        {\n         alert(\"Unit already mapped to existing T&P, can't delete it !\"); \n        }\n        else{\n          alert(\"Error...try again !\");\n        }\n      }\n      else{\n        getCategories();\n        handleResetCategories();\n        if(responseValue===1 && methodName === \"Post\")\n        {\n         alert(\"Category created succesfully !\"); \n        }\n        else if(responseValue===1 && methodName===\"Delete\")\n        {\n         alert(\"Category deleted succesfully !\"); \n        }\n        else if(responseValue===5 && methodName===\"Delete\")\n        {\n         alert(\"Category already mapped to existing T&P, can't delete it !\"); \n        }\n        else if(responseValue===-1)\n        {\n          alert(\"Category already exists !\");\n        }\n        else{\n          alert(\"Error...try again !\");\n        }\n      }\n    setIsLoading(false);\n  });\n\n}\n\nconst createUnit = () =>  {\n\n  if(newUnit.length>0)\n  {\n    const url = constants.createUnit(newUnit);\n    console.log(\"New unit url - \"+url);\n  \n    processAPI(url,\"Post\",\"unit\"); \n    \n  }\n  \n  }\n\n  const handleResetUnit = () => {\n    setNewUnit('');\n    setUpdateUnit('');\n    setSelectedUnit('');\n    setIsEditDisabledUnit(true);\n  }\n\n  const handleResetCategories = () => {\n    setNewCategory('');\n    setUpdateCategory('');\n    setSelectedCategory('');\n    setIsEditDisabledCategory(true);\n  }\n\n\nconst getCategories = () => {\n  try{ \n   console.log(constants.getCategories);\n  fetch(constants.getCategories)\n           .then((response) => {\n                console.log(response);\n               return response.json();\n           })\n           .then((myJson) => {\n               // console.log(myJson);\n               setCategories(myJson);\n           });\n   } catch (e) {\n       console.log(e);\n   }\n};\n\n\nconst unitInputChange = (e) => {\nsetNewUnit(e.target.value);\n}\n\nconst unitUpdateChange = (e) => {\n  setUpdateUnit(e.target.value);\n}\n\nconst updateTheUnit = () => {\n\n  if(updateUnit.length>0)\n  {\n    const url = constants.updateUnit(selectedUnit,updateUnit);\n\n    console.log(url);\n    \n    processAPI(url,\"Post\",\"unit\");\n     \n  }\n\n};\n\nconst DeleteTheUnit = ()=> {\n  \n  if(updateUnit.length>0)\n  {\n    const confirm = window.confirm(\"Are you sure you want to delete the unit ?\");\n  \n    if(confirm)\n    {\n      const url = constants.deleteUnit(updateUnit);\n\n      console.log(url);\n    \n      processAPI(url,\"Delete\",\"unit\");\n    }\n    else{\n      handleResetUnit();\n    }\n    \n  }\n  \n};\n\nconst editCategory = () => {\nsetUpdateCategory(selectedCategory);\nsetIsEditDisabledCategory(false);\n}\n\nconst categoryUpdateChange = (e) => {\nsetUpdateCategory(e.target.value);\n}\n\nconst categoryInputChange = (e) => {\n  setNewCategory(e.target.value);\n}\n\nconst createCategory = () => {\n  if(newCategory.length>0)\n  {\n    const url = constants.createCategory(newCategory);\n    console.log(\"New category url - \"+url);\n  \n    processAPI(url,\"Post\",\"category\"); \n    \n  }\n}\n\nconst updateTheCategory = () => {\n\n  if(updateCategory.length>0)\n  {\n    const url = constants.updateCategory(selectedCategory,updateCategory);\n\n    console.log(url);\n    \n    processAPI(url,\"Post\",\"category\");\n     \n  }\n}\n\nconst DeleteTheCategory = () => {\n\n  if(updateCategory.length>0)\n  {\n    const confirm = window.confirm(\"Are you sure you want to delete the category ?\");\n  \n    if(confirm)\n    {\n      const url = constants.deleteCategory(updateCategory);\n\n      console.log(url);\n    \n      processAPI(url,\"Delete\",\"category\");\n    }\n    else{\n      handleResetCategories();\n    }\n\n}\n}\n\n\nreturn(  \n  <div>\n    {isLoading ? (\n     <Loading />)\n    :\n    (\n    <>    <div className={myStyle.mainBox}> \n  <h1>Units & Categories</h1>\n  </div>\n  <div className={myStyle.UnitBox}>\n    <label htmlFor=\"UnitsDropdown\">All Units</label>\n    <select\n    id=\"UnitsDropdown\"\n    className={myStyle.Unitsdropdown}\n    value={selectedUnit}\n    onChange={handleUnitsChange}\n    >\n       <option value=\"\" className={myStyle.optionValue}>Select a Unit</option>\n        {units.map((item) => (\n          <option key={item.unitName} value={item.unitName}>\n            {item.unitName}\n          </option>\n        ))}\n\n    </select>\n    <button onClick={editUnit} class=\"bg-btn-lightBlue hover:bg-blue-700 text-white font-bold py-1 px-6 rounded-full \" >Edit</button> \n  </div>\n  <div className={myStyle.newUnit}>\n  <label htmlFor=\"unit-new\">New Unit</label>\n    <input className={myStyle.newUnitTextBox} onChange={unitInputChange} type=\"text\" value={newUnit} name=\"unit-new\" />\n    <button onClick={createUnit} class=\"bg-btn-darkBlue hover:bg-green-700 text-white font-bold py-1 px-6 rounded-full \" >Create Unit</button> \n  </div>\n\n  <div className={myStyle.newUnit}>\n  <label htmlFor=\"unit-new\">Edit Unit</label>\n    <input className={myStyle.updateUnitTextBox} disabled={isEditDisabledUnit} onChange={unitUpdateChange} type=\"text\" value={updateUnit} name=\"unit-update\" />\n    <button onClick={updateTheUnit} class=\"bg-btn-firozi hover:bg-purple-700 text-white-bold font-bold py-1 px-6 rounded-full \"  >Update</button> \n    <button onClick={DeleteTheUnit}  style={{marginLeft : \"1%\"}} class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-6 rounded-full \" >Delete</button> \n  </div>\n\n  \n  <div className={myStyle.CategoriesBox}>\n    <label htmlFor=\"UnitsDropdown\">All Categories</label>\n    <select\n    id=\"CategoriesDropdown\"\n    className={myStyle.Categoriesdropdown}\n    value={selectedCategory}\n    onChange={handleCategoriesChange}\n    >\n       <option value=\"\" className={myStyle.optionValue}>Select a Category</option>\n        {categories.map((item) => (\n          <option key={item.categoryName} value={item.categoryName}>\n            {item.categoryName}\n          </option>\n        ))}\n\n    </select>\n    <button onClick={editCategory} class=\"bg-btn-lightBlue hover:bg-blue-700 text-white font-bold py-1 px-6 rounded-full \" >Edit</button> \n  </div>\n  <div className={myStyle.newCategory}>\n  <label htmlFor=\"unit-new\">New Category</label>\n    <input className={myStyle.newCategoryTextBox} onChange={categoryInputChange} type=\"text\" value={newCategory} name=\"category-new\" />\n    <button onClick={createCategory} class=\"bg-btn-darkBlue hover:bg-green-700 text-white font-bold py-1 px-6 rounded-full \" >Create Category</button> \n  </div>\n\n  <div className={myStyle.newCategory}>\n  <label htmlFor=\"category-new\">Edit Category</label>\n    <input className={myStyle.updateCategoryTextBox} disabled={isEditDisabledCategory} onChange={categoryUpdateChange} type=\"text\" value={updateCategory} name=\"category-update\" />\n    <button onClick={updateTheCategory} class=\"bg-btn-firozi hover:bg-purple-700 text-white-bold font-bold py-1 px-6 rounded-full \"  >Update</button> \n    <button onClick={DeleteTheCategory}  style={{marginLeft : \"1%\"}} class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-6 rounded-full \" >Delete</button> \n  </div>\n  </>\n\n  )\n\n}\n</div>\n  \n)\n\n}\n\nexport default Units;","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Home/Home.jsx",["92"],[],"import React, { useEffect, useState } from \"react\";\nimport myStyles from './Home.module.css';\nimport Helmet from 'react-helmet';\nimport { IconContext } from \"react-icons\";\nimport {GiHamburgerMenu} from 'react-icons/gi'; \nimport { MdFactory } from \"react-icons/md\";\nimport { BsTools } from \"react-icons/bs\";\nimport { TbRulerMeasure } from \"react-icons/tb\";\nimport { AiFillHome,AiFillFileText } from \"react-icons/ai\";\nimport logo from \"../assets/images/logo.png\";\nimport TopBar from \"../TopBar/TopBar\";\nimport HomeItem from \"../Components/HomeItem/HomeItem\";\nimport Sites from \"../Components/Sites/Sites\"\nimport TnP from \"../Components/TnP/TnP\"\nimport Units from \"../Components/Units/Units\"\nimport Requisition from \"../Components/Requisition/Requisition\"\nimport * as constants from \"../assets/Constants\"\n\nconst Home = () => {\n\nconst[collapsed,setCollapsed] = useState(false);    \nconst[currentWindow,setCurrentWindow] = useState(0);\nconst[sites,setSites] = useState([]);\nconst[tnp,setTnP] = useState([]);\n\n\nconst[requisitions,setRequisitions]= useState([{}]);\n\nuseEffect(() => {\n\n    getSites();\n    getTnP();\n    getRequisitions();\n   \n\n},[]);\n\nconst getSites = () => {\n\n   try{ \n    console.log(constants.getSites);\n   fetch(constants.getSites)\n            .then((response) => {\n                 console.log(response);\n                return response.json();\n            })\n            .then((myJson) => {\n                // console.log(myJson);\n                setSites(myJson);\n            });\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nconst getTnP = () => {\n    try{ \n        console.log(constants.getTnP);\n        fetch(constants.getTnP)\n                 .then((response) => {\n                      console.log(response);\n                     return response.json();\n                 })\n                 .then((myJson) => {\n                     // console.log(myJson);\n                     setTnP(myJson);\n                 });\n         } catch (e) {\n             console.log(e);\n         }\n};\n\n\n \nconst getRequisitions = () => {\n    try{ \n        console.log(constants.getRequisitions);\n        fetch(constants.getRequisitions)\n                 .then((response) => {\n                      console.log(response);\n                     return response.json();\n                 })\n                 .then((myJson) => {\n                     // console.log(myJson);\n                     setRequisitions(myJson);\n                 });\n         } catch (e) {\n             console.log(e);\n         }\n};\n\n\nfunction getSideBarStatus () {\n\n    if(!collapsed)\n    return myStyles.sideBarDivNotCollapsed;\n\n    return myStyles.sideBarDivCollapsed;\n\n\n};    \n\nfunction CollapseSidebar() {\n\n    setCollapsed(!collapsed);\n}\n\nfunction getIconSize(){\n\n    if(!collapsed)\n    return \"1em\";\n\n    else\n    return \"1.5em\";\n}\n\nfunction getDivClass () {\n\n    if(collapsed)\n    return myStyles.DivBoxCollapsed;\n\n    else\n    return myStyles.DivBoxExpanded;\n}\n\nfunction getCentreStage() {\n\n    if(currentWindow === 0)\n        {\n            return (\n                <HomeItem sites = {sites} tnp={tnp} requisitions={requisitions} />\n            );\n        }\n        else if(currentWindow === 1)\n        {\n            return(\n                <Sites  sites = {sites} />\n            )\n        }\n        else if(currentWindow === 2)\n        {\n            return(\n                <TnP />\n            )\n        }\n        else if(currentWindow === 3)\n        {\n            return(\n                <Units />\n            )\n        }\n        else if(currentWindow === 4)\n        {\n            return(\n                <Requisition />\n            )\n        }\n        else \n        {\n            return(\n                <HomeItem />\n            )\n        }\n       \n\n   \n}\n\n\n    return(\n        <>\n        <Helmet>\n         \n            <body />\n                <style>\n                    {`                        \n                        body{\n                            background-color: rgb(254, 254, 246);               \n                       \n                        }\n                    `}\n                </style>\n            \n        </Helmet>\n       <TopBar />            \n\n     \n        <div id=\"sideBar\" className={getSideBarStatus()}>\n        <div className={getDivClass()} style={{paddingTop : \"0px\"}} onClick={CollapseSidebar}>\n        {!collapsed && <h3 className={myStyles.iconWithtext} style={{marginRight: \"10%\"}} >SIA </h3>}\n        <IconContext.Provider value={{ size : getIconSize()}}>\n         <GiHamburgerMenu className={myStyles.iconWithtext}  /> \n         </IconContext.Provider>\n        </div>  \n\n         <div  className={getDivClass()} onClick={() => setCurrentWindow(0)} >\n        {!collapsed && <h3 className={myStyles.iconWithtext } style={{marginRight: \"10%\"}} >Home </h3>}\n        <IconContext.Provider value={{ size : getIconSize()}}>\n         <AiFillHome className={myStyles.iconWithtext}  /> \n         </IconContext.Provider>\n        </div>  \n            \n        <div className={getDivClass()} onClick={() => setCurrentWindow(1)} >\n        {!collapsed && <h3 className={myStyles.iconWithtext} >Sites </h3>}\n        <IconContext.Provider value={{ size : getIconSize()}}>\n         <MdFactory className={myStyles.iconWithtext} /> \n         </IconContext.Provider>\n        </div>  \n\n        <div className={getDivClass()} onClick={() => setCurrentWindow(2)} >\n        {!collapsed && <h3 className={myStyles.iconWithtext} >T&P </h3>}\n        <IconContext.Provider value={{ size : getIconSize()}}>\n         <BsTools className={myStyles.iconWithtext} /> \n         </IconContext.Provider>\n        </div>  \n\n        <div className={getDivClass()} onClick={() => setCurrentWindow(3)} >\n        {!collapsed && <h3 className={myStyles.iconWithtext} >Units </h3>}\n        <IconContext.Provider value={{ size : getIconSize()}}>\n         <TbRulerMeasure className={myStyles.iconWithtext}  /> \n         </IconContext.Provider>\n        </div>  \n\n        <div className={getDivClass()} onClick={() => setCurrentWindow(4)} >\n        {!collapsed && <h3 className={myStyles.iconWithtext} >Requisition </h3>}\n        <IconContext.Provider value={{ size : getIconSize()}}>\n         <AiFillFileText className={myStyles.iconWithtext}  /> \n         </IconContext.Provider>\n        </div>   \n            \n            \n        </div>\n      \n\n        <div className={myStyles.displayInline}>\n        {getCentreStage()}\n                </div>\n        </>\n    )\n}\n\nexport default Home;","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Login/Login.jsx",["93","94","95"],[],"import {React,useEffect,useState} from \"react\";\nimport styles from './Login.module.css';\nimport TopBar from '../TopBar/TopBar';\nimport * as constant from \"../assets/Constants\";\nimport { useNavigate } from \"react-router-dom\";\nimport logoSvg from \"../assets/images/logo.png\"\nimport Loading from \"../Components/IsLoading/isLoading\"\n\nconst Login = () => {\n\n    var navigate = useNavigate();\n\n    const[userName,setUserName] = useState(\"\");\n    const[password,setPassword] = useState(\"\");\n    const[response,setResponse] = useState('');\n    const[isLoading,setIsLoading] = useState(false);\n    const[isHidden,setIsHidden] = useState(true);\n\n    // useEffect(() => {\n    //   console.log(\"Resposne is \"+response);\n    //   HandleLogin()\n    // },[response]);\n\n    const HideAlert = () => {\n\n      setIsHidden(true) ;\n        setResponse('');\n\n    };\n\n    const HandleLogin = async() => {\n\n      var url = constant.Login+userName+\"&password=\"+password;\n      console.log(url);\n      setIsLoading(true);\n                 \n      await fetch(url)\n    .then((response) => {\n      return response.text();\n    })\n    .then((response) => {\n      setIsLoading(false);\n      console.log(\"Abhi response is \" + response);\n\n      if (response === \"true\") {\n        console.log(\"success as response is \" + response);\n        navigate('/home');\n      } else {\n        console.log(\"failure as response is \" + response);\n        setIsHidden(false);\n      }\n    });\n};\n\n\n\n\n    return(\n        isLoading ? (\n          <Loading />\n        ) :\n        <div id=\"mainBody\">\n         <div className={styles.logoBox}> \n         <img src={logoSvg} alt=\"SIA\" className={styles.logo}/>        \n         </div>\n        <div className={styles.loginBox}>\n        <label htmlFor=\"userName\" className={\"block text-sm font-medium leading-6 text-gray-900 \"+ styles.userName} >Username</label>  \n        <input id=\"userName\" value={userName} onChange={(e) => setUserName(e.target.value)} className={\"block w-full rounded-md border-0 py-1.5 pl-7 pr-20 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 \"+ styles.userName}  name=\"userName\" placeholder=\"User name\" type=\"text\" onKeyDown={HideAlert} />\n        <label htmlFor=\"password\" className={\"block text-sm font-medium leading-6 text-gray-900 \"+ styles.userName} >Password</label>\n        <input id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className={\"block w-full rounded-md border-0 py-1.5 pl-7 pr-20 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 \" + styles.userName} name=\"password\" placeholder=\"Password\" type= \"password\" onKeyDown={HideAlert} />\n        <button onClick={HandleLogin} className={styles.LoginBtn + \" bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-full\" }>\n  Login\n</button>\n\n<div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" id=\"errorAlert\" role=\"alert\" hidden={isHidden}  >\n  <span className=\"block sm:inline\">Invalid Id or password</span>\n  <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n    <svg className=\"fill-current h-6 w-6 text-red-500\" role=\"button\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" onClick={HideAlert}><title>Close</title><path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"/></svg>\n  </span>\n</div>\n        </div>\n        </div>\n\n        \n    )\n\n\n};\n\nexport default Login;","/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/PopUp/PopUp.jsx",[],[],"/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/IsLoading/isLoading.jsx",[],[],"/Users/vineetmishra/Desktop/Development/SNS_Inventory_Mgmt_App/snsdashboard/src/Components/TnP/TnP.jsx",["96","97","98"],[],{"ruleId":"99","severity":1,"message":"100","line":28,"column":7,"nodeType":"101","endLine":28,"endColumn":208},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":6,"column":13,"nodeType":"104","messageId":"105","endLine":6,"endColumn":21},{"ruleId":"102","severity":1,"message":"107","line":7,"column":17,"nodeType":"104","messageId":"105","endLine":7,"endColumn":29},{"ruleId":"102","severity":1,"message":"108","line":8,"column":20,"nodeType":"104","messageId":"105","endLine":8,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"109","line":3,"column":13,"nodeType":"104","messageId":"105","endLine":3,"endColumn":22},{"ruleId":"102","severity":1,"message":"110","line":7,"column":9,"nodeType":"104","messageId":"105","endLine":7,"endColumn":14},{"ruleId":"102","severity":1,"message":"106","line":7,"column":16,"nodeType":"104","messageId":"105","endLine":7,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"111","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":23,"column":3,"nodeType":"114","endLine":23,"endColumn":5,"suggestions":"115"},{"ruleId":"102","severity":1,"message":"116","line":10,"column":8,"nodeType":"104","messageId":"105","endLine":10,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":1,"column":15,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"117","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":14},{"ruleId":"102","severity":1,"message":"118","line":15,"column":11,"nodeType":"104","messageId":"105","endLine":15,"endColumn":19},{"ruleId":"112","severity":1,"message":"119","line":57,"column":6,"nodeType":"114","endLine":57,"endColumn":21,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":510,"column":46,"nodeType":"123","messageId":"124","endLine":512,"endColumn":18},{"ruleId":"112","severity":1,"message":"125","line":700,"column":4,"nodeType":"114","endLine":700,"endColumn":24,"suggestions":"126"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setSites' is assigned a value but never used.","'setInventory' is assigned a value but never used.","'setRequisitions' is assigned a value but never used.","'constants' is defined but never used.","'sites' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUnits'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'logo' is defined but never used.","'TopBar' is defined but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetEditValues'. Either include it or remove the dependency array.",["128"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'item'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has a missing dependency: 'isEditFile'. Either include it or remove the dependency array.",["129"],{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [getUnits]",{"range":"136","text":"137"},"Update the dependencies array to be: [GetEditValues, selectedTnPID]",{"range":"138","text":"139"},"Update the dependencies array to be: [TnpJson, isEditFile, isLoading]",{"range":"140","text":"141"},[850,852],"[getUnits]",[1816,1831],"[GetEditValues, selectedTnPID]",[17709,17729],"[TnpJson, isEditFile, isLoading]"]